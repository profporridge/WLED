; PlatformIO Project Configuration File
; Please visit documentation: https://docs.platformio.org/page/projectconf.html

[platformio]
# ------------------------------------------------------------------------------
# ENVIRONMENTS
#
# Please uncomment one of the lines below to select your board(s)
# ------------------------------------------------------------------------------

# Travis CI binaries (use `platformio_override.ini` when building for your own board; see `platformio_override.ini.sample` for an example)
; default_envs = travis_esp8266, travis_esp32

# Release binaries
; default_envs = nodemcuv2, esp8266_2m, esp01_1m_full, esp32dev, esp32_eth, esp32s2_saola, esp32c3

# WLED sound-reactive binaries
; default_envs = soundReactive_lolin_d32
;default_envs = soundReactive_esp32dev

; WLEDSR binaries
; ===================
; min = SR core (audio, 2D, custom effects)
; max = min + USERMOD_DALLASTEMPERATURE + USERMOD_FOUR_LINE_DISPLAY+ USERMOD_ROTARY_ENCODER_UI + USERMOD_AUTO_SAVE

; default_envs = esp32_4MB_min, esp32_4MB_max, esp32_16MB_max, wemos_shield_esp32_4MB_max, wemos_shield_esp32_16MB_max, esp32_pico_4MB_min
; default_envs = esp32_4MB_min
default_envs = esp32_4MB_max ; recommended default
; default_envs = esp32_16MB_max
; default_envs = wemos_shield_esp32_4MB_max
; default_envs = wemos_shield_esp32_16MB_max
; default_envs = esp32_pico_4MB_min

# Build everything
; default_envs = esp32dev, esp8285_4CH_MagicHome, codm-controller-0.6-rev2, codm-controller-0.6, esp32s2_saola, d1_mini_5CH_Shojo_PCB, d1_mini, sp501e, travis_esp8266, travis_esp32, nodemcuv2, esp32_eth, anavi_miracle_controller, esp07, esp01_1m_full, m5atom, h803wf, d1_mini_ota, heltec_wifi_kit_8, esp8285_H801, d1_mini_debug, wemos_shield_esp32, elekstube_ips

# Single binaries (uncomment your board)
; default_envs = elekstube_ips
; default_envs = nodemcuv2
; default_envs = esp01_1m_ota
; default_envs = esp01_1m_full
; default_envs = esp07
; default_envs = d1_mini
; default_envs = heltec_wifi_kit_8
; default_envs = h803wf
; default_envs = d1_mini_debug
; default_envs = d1_mini_ota
; default_envs = esp32dev
; default_envs = esp8285_4CH_MagicHome
; default_envs = esp8285_H801
; default_envs = d1_mini_5CH_Shojo_PCB
; default_envs = wemos_shield_esp32
; default_envs = m5atom
; default_envs = esp32_eth
; default_envs = esp32dev_qio80
; default_envs = esp32_eth_ota1mapp
; default_envs = esp32s2_saola

src_dir  = ./wled00
data_dir = ./wled00/data
build_cache_dir = ~/.buildcache
extra_configs =
  platformio_override.ini

[common]
# ------------------------------------------------------------------------------
# PLATFORM:
#   !! DO NOT confuse platformio's ESP8266 development platform with Arduino core for ESP8266
#
#   arduino core 2.6.3 = platformIO 2.3.2
#   arduino core 2.7.0 = platformIO 2.5.0
# ------------------------------------------------------------------------------
arduino_core_2_6_3 = espressif8266@2.3.3
arduino_core_2_7_4 = espressif8266@2.6.2
arduino_core_3_0_0 = espressif8266@3.0.0
arduino_core_3_0_2 = espressif8266@3.2.0

# Development platforms
arduino_core_develop = https://github.com/platformio/platform-espressif8266#develop
arduino_core_git = https://github.com/platformio/platform-espressif8266#feature/stage

# Platform to use for ESP8266
platform_wled_default = ${common.arduino_core_2_7_4}
# We use 2.7.4.7 for all, includes PWM flicker fix and Wstring optimization
platform_packages = tasmota/framework-arduinoespressif8266 @ 3.20704.7
                    platformio/toolchain-xtensa @ ~2.40802.200502
                    platformio/tool-esptool @ ~1.413.0
                    platformio/tool-esptoolpy @ ~1.30000.0

# ------------------------------------------------------------------------------
# FLAGS: DEBUG
#
# ------------------------------------------------------------------------------
debug_flags = -D DEBUG=1 -D WLED_DEBUG -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
#if needed (for memleaks etc) also add; -DDEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"
#-DDEBUG_ESP_CORE is not working right now

# ------------------------------------------------------------------------------
# FLAGS: ldscript (available ldscripts at https://github.com/esp8266/Arduino/tree/master/tools/sdk/ld)
#    ldscript_2m1m (2048 KB) = 1019 KB sketch, 4 KB eeprom, 1004 KB spiffs, 16 KB reserved
#    ldscript_4m1m (4096 KB) = 1019 KB sketch, 4 KB eeprom, 1002 KB spiffs, 16 KB reserved, 2048 KB empty/ota?
#
# Available lwIP variants (macros):
#    -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH  = v1.4 Higher Bandwidth (default)
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY       = v2 Lower Memory
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH = v2 Higher Bandwidth
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
#
# BearSSL performance:
#  When building with -DSECURE_CLIENT=SECURE_CLIENT_BEARSSL, please add `board_build.f_cpu = 160000000` to the environment configuration
#
# BearSSL ciphers:
#   When building on core >= 2.5, you can add the build flag -DBEARSSL_SSL_BASIC in order to build BearSSL with a limited set of ciphers:
#     TLS_RSA_WITH_AES_128_CBC_SHA256 / AES128-SHA256
#     TLS_RSA_WITH_AES_256_CBC_SHA256 / AES256-SHA256
#     TLS_RSA_WITH_AES_128_CBC_SHA / AES128-SHA
#     TLS_RSA_WITH_AES_256_CBC_SHA / AES256-SHA
#  This reduces the OTA size with ~45KB, so it's especially useful on low memory boards (512k/1m).
# ------------------------------------------------------------------------------
build_flags =
  ; -Wno-switch
  ; -Wno-deprecated-declarations
  ; -Wno-write-strings
  ; -Wno-unused-variable
  ; -Wno-unused-value
  ; -Wno-sign-compare
  ; -Wno-unused-but-set-variable
  ; -Wno-return-type
  ; -Wno-sequence-point
  ; -Wno-narrowing
  -DMQTT_MAX_PACKET_SIZE=1024
  -DSECURE_CLIENT=SECURE_CLIENT_BEARSSL
  -DBEARSSL_SSL_BASIC
  -D CORE_DEBUG_LEVEL=0
  -D NDEBUG
  #build_flags for the IRremoteESP8266 library (enabled decoders have to appear here)
  -D _IR_ENABLE_DEFAULT_=false
  -D DECODE_HASH=true
  -D DECODE_NEC=true
  -D DECODE_SONY=true
  -D DECODE_SAMSUNG=true
  -D DECODE_LG=true
  -DWLED_USE_MY_CONFIG

build_unflags =
  ; -Wall
  ; -Wreorder
  ; -Wdeprecated-declarations

# enables all features for travis CI
build_flags_all_features =
  -D WLED_ENABLE_ADALIGHT
  -D WLED_ENABLE_DMX
  -D WLED_ENABLE_MQTT
  -D WLED_ENABLE_WEBSOCKETS

build_flags_esp8266 = ${common.build_flags}  ${esp8266.build_flags}
build_flags_esp32   = ${common.build_flags}  ${esp32.build_flags}

ldscript_1m128k = eagle.flash.1m128.ld
ldscript_2m512k = eagle.flash.2m512.ld
ldscript_2m1m = eagle.flash.2m1m.ld
ldscript_4m1m = eagle.flash.4m1m.ld

; [esp8266]
; build_flags =
;   -DESP8266
;   -DFP_IN_IROM
;   -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
;    -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
;   -DVTABLES_IN_FLASH
;   -DMIMETYPE_MINIMAL
; [esp32]
; build_flags = -w -g
;   -DARDUINO_ARCH_ESP32
;   -DCONFIG_LITTLEFS_FOR_IDF_3_2

[scripts_defaults]
extra_scripts =
  pre:pio-scripts/set_version.py
  post:pio-scripts/output_bins.py
  post:pio-scripts/strip-floats.py
  pre:pio-scripts/user_config_copy.py

# ------------------------------------------------------------------------------
# COMMON SETTINGS:
# ------------------------------------------------------------------------------
[env]
framework = arduino
board_build.flash_mode = dout
;monitor_speed = 921600
monitor_speed = 115200
# slow upload speed (comment this out with a ';' when building for development use)
upload_speed = 921600

# ------------------------------------------------------------------------------
# LIBRARIES: required dependencies
#   Please note that we don't always use the latest version of a library.
#
#   The following libraries have been included (and some of them changd) in the source:
#     ArduinoJson@5.13.5, Blynk@0.5.4(changed), E131@1.0.0(changed), Time@1.5, Timezone@1.2.1
# ------------------------------------------------------------------------------
lib_compat_mode = strict
lib_deps =
    fastled/FastLED @ 3.5.0
    IRremoteESP8266 @ 2.8.2
    https://github.com/Aircoookie/ESPAsyncWebServer.git @ ~2.0.7
  #For use of the TTGO T-Display ESP32 Module with integrated TFT display uncomment the following line
    #TFT_eSPI
  #For use SSD1306 OLED display uncomment following
    #U8g2@~2.27.2
  #For Dallas sensor uncomment following 2 lines
    #OneWire@~2.3.5
    #milesburton/DallasTemperature@^3.9.0
  #For BME280 sensor uncomment following
    #BME280@~3.0.0
    ; adafruit/Adafruit BMP280 Library @ 2.1.0
    ; adafruit/Adafruit CCS811 Library @ 1.0.4
    ; adafruit/Adafruit Si7021 Library @ 1.4.0

extra_scripts = ${scripts_defaults.extra_scripts}

[esp8266]
build_flags =
  -DESP8266
  -DFP_IN_IROM
  ;-Wno-deprecated-declarations
  -Wno-register
	-Wno-misleading-indentation
; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
  -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; lwIP 2 - Higher Bandwidth no Features
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; lwIP 1.4 - Higher Bandwidth (Aircoookie has)
   -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; VTABLES in Flash
  -DVTABLES_IN_FLASH
; restrict to minimal mime-types
  -DMIMETYPE_MINIMAL

lib_deps =
  ${env.lib_deps}
  #https://github.com/lorol/LITTLEFS.git
  ESPAsyncTCP @ 1.2.2
  ESPAsyncUDP
  makuna/NeoPixelBus @ 2.6.9

[esp32]
#platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.2.3/platform-espressif32-2.0.2.3.zip
platform = espressif32@3.5.0

platform_packages = framework-arduinoespressif32 @ https://github.com/Aircoookie/arduino-esp32.git#1.0.6.4

build_flags = -g
  -DARDUINO_ARCH_ESP32
  ;-DCONFIG_LITTLEFS_FOR_IDF_3_2
  -D CONFIG_ASYNC_TCP_USE_WDT=0
#use LITTLEFS library by lorol in ESP32 core 1.x.x instead of built-in in 2.x.x
  -D LOROL_LITTLEFS

default_partitions = tools/WLED_ESP32_4MB_1MB_FS.csv

lib_deps =
  ${env.lib_deps}
  ; https://github.com/lorol/LITTLEFS.git
  ; WLEDSR specific: use patched version of lorol LittleFS
  https://github.com/softhack007/LITTLEFS-threadsafe.git#master
  makuna/NeoPixelBus @ 2.6.9
  https://github.com/pbolduc/AsyncTCP.git @ 1.2.0
  https://github.com/kosme/arduinoFFT#develop @ 1.9.2
  ; arduinoFFT @ 1.5.6
  ;FS

[esp32s2]
build_flags = -g
  -DARDUINO_ARCH_ESP32
  -DARDUINO_ARCH_ESP32S2
  -DCONFIG_IDF_TARGET_ESP32S2
  -D CONFIG_ASYNC_TCP_USE_WDT=0
  -DCO

lib_deps =
  ${env.lib_deps}
  makuna/NeoPixelBus @ 2.6.9
  https://github.com/pbolduc/AsyncTCP.git @ 1.2.0

[esp32c3]
build_flags = -g
  -DARDUINO_ARCH_ESP32
  -DARDUINO_ARCH_ESP32C3
  -DCONFIG_IDF_TARGET_ESP32C3
  -D CONFIG_ASYNC_TCP_USE_WDT=0
  -DCO

lib_deps =
  ${env.lib_deps}
  makuna/NeoPixelBus @ 2.6.9
  https://github.com/pbolduc/AsyncTCP.git @ 1.2.0

# ------------------------------------------------------------------------------
# WLED BUILDS
# ------------------------------------------------------------------------------

[env:nodemcuv2]
board = nodemcuv2
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_RELEASE_NAME=nodemcuv2
lib_deps = ${esp8266.lib_deps}

[env:esp8266_2m]
board = esp_wroom_02
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_2m512k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_RELEASE_NAME=esp8266_2m
lib_deps = ${esp8266.lib_deps}

[env:esp01_1m_full]
board = esp01_1m
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_1m128k}

build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_RELEASE_NAME=esp01_1m_full -D WLED_DISABLE_OTA
lib_deps = ${esp8266.lib_deps}

[env:esp07]
board = esp07
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}

[env:d1_mini]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
upload_speed = 921600
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}
monitor_filters = esp8266_exception_decoder

[env:heltec_wifi_kit_8]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}

[env:h803wf]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D LEDPIN=1 -D WLED_DISABLE_INFRARED
lib_deps = ${esp8266.lib_deps}

[env:esp32dev]
board = esp32dev
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=esp32dev #-D WLED_DISABLE_BLYNK #-D WLED_DISABLE_BROWNOUT_DET
upload_speed = 921600
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}

[env:elementv2]
board = esp32dev
platform = espressif32@3.2
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D LEDPIN=33 -D BTNPIN=22 -D AUDIOPIN=32
upload_speed = 460800
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}

[env:esp32dev_qio80]
board = esp32dev
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=esp32dev_qio80 #-D WLED_DISABLE_BLYNK #-D WLED_DISABLE_BROWNOUT_DET
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
board_build.flash_mode = qio

[env:esp32_eth]
board = esp32-poe
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=esp32_eth -D RLYPIN=-1 -D WLED_USE_ETHERNET -D BTNPIN=-1 -D WLED_DISABLE_BLYNK
lib_deps = ${esp32.lib_deps}
board_build.partitions = ${esp32.default_partitions}

[env:esp32s2_saola]
board = esp32-s2-saola-1
platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.2.2/platform-tasmota-espressif32-2.0.2.zip
platform_packages =
framework = arduino
board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv
board_build.flash_mode = qio
upload_speed = 460800
build_unflags = ${common.build_unflags}
lib_deps = ${esp32s2.lib_deps}

[env:esp32c3]
board = esp32-c3-devkitm-1
platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.2.2/platform-tasmota-espressif32-2.0.2.zip
platform_packages =
framework = arduino
board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv
upload_speed = 460800
build_unflags = ${common.build_unflags}
lib_deps = ${esp32c3.lib_deps}

[env:esp8285_4CH_MagicHome]
board = esp8285
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_1m128k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_OTA
lib_deps = ${esp8266.lib_deps}

[env:esp8285_H801]
board = esp8285
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_1m128k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_DISABLE_OTA
lib_deps = ${esp8266.lib_deps}

[env:d1_mini_5CH_Shojo_PCB]
board = d1_mini
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_USE_SHOJO_PCB
lib_deps = ${esp8266.lib_deps}

# ------------------------------------------------------------------------------
# DEVELOPMENT BOARDS
# ------------------------------------------------------------------------------

[env:d1_mini_debug]
board = d1_mini
build_type = debug
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} ${common.debug_flags}
lib_deps = ${esp8266.lib_deps}

[env:d1_mini_ota]
board = d1_mini
upload_protocol = espota
# exchange for your WLED IP
upload_port = "10.10.1.27"
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
# ------------------------------------------------------------------------------
# sound reactive board configurations
# ------------------------------------------------------------------------------
 
[env:m5stick-c]
board = m5stick-c
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D M5STICKC_LCD=1 -D LEDPIN=26 -D BTNPIN=37 -D IRPIN=9 -D USERMOD_M5STICKC=1 -D WLED_DISABLE_ALEXA -D WLED_DISABLE_BLYNK -D WLED_DISABLE_CRONIXIE
  -D WLED_DISABLE_HUESYNC -D WLED_DISABLE_INFRARED -D WLED_DISABLE_MQTT -D I2S_WS=0 -D I2S_SCK=-1 -D I2S_SD=34 -D USERMOD_M5STICKC
; lib_ignore =
; 	ESPAsyncTCP
; 	ESPAsyncUDP
;pload_protocol = espota
upload_speed = 1500000
;upload_port = 192.168.23.240
upload_port = com9
;upload_port = wled-m5stick-1
lib_deps = lib_deps =
  ${env.lib_deps}
  m5stickc
board_build.partitions = ${esp32.default_partitions}
;monitor_port = COM5 #"192.168.50.110"
#platform = ${common.platform_wled_default}


[env:soundReactive_ttgoeink]
board = esp32dev
extends = env:esp32_4MB_min_base
;board = ttgo-t7-v13-mini32
;platform = espressif32@2.0
;upload_port = /dev/cu.SLAB_USBtoUART
;upload_speed = 460800
;monitor_port = /dev/cu.SLAB_USBtoUART
;build_unflags = ${common.build_unflags}
upload_port = com7
;src_filter = ${src_filter} +<*> ;+<../usermods/ttgo-eink/>
;lib_deps = ${esp32.lib_deps}
;platform_packages =
  ; use GCC AVR 7.3.0+
 ; toolchain-atmelavr@>=1.70300.0
;board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv
build_flags = ${common.build_flags_esp32} -D LEDPIN=21  -D I2S_WS=33 -D I2S_SCK=32 -D I2S_SD=27  -D WLED_DISABLE_MQTT -D USERMOD_TTGO_EINK
;lib_ignore =
;  ESPAsyncTCP
;  ESPAsyncUDP
;  m5stickc
monitor_port = COM7

[env:soundReactive_m5stick-c]
board = m5stick-c
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
;upload_port = /dev/cu.SLAB_USBtoUART
;upload_speed = 460800
;monitor_port = /dev/cu.SLAB_USBtoUART
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32}  -D WLED_RELEASE_NAME=soundReactive_m5stick -D M5STICKC_LCD=1 -D USE_M5_LCD=1 -D LEDPIN=26 -D BTNPIN=37 -D IRPIN=9 -D USERMOD_M5STICKC -D WLED_DISABLE_ALEXA -D WLED_DISABLE_BLYNK -D WLED_DISABLE_CRONIXIE
  -D WLED_DISABLE_HUESYNC -D WLED_DISABLE_INFRARED -D WLED_DISABLE_MQTT -D I2S_WS=0 -D I2S_SCK=-1 -D I2S_SD=34   -D WLED_DISABLE_MQTT
upload_speed = 1500000
lib_deps = ${esp32.lib_deps}
;monitor_filters = hexlify, esp32_exception_decoder, time
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
board_build.flash_mode = dio

[env:soundReactive_ttgo_t7]
upload_protocol = espota
# exchange for your WLED IP
upload_port = wled-ttgo.local 
board = ttgo-t7-v13-mini32
platform = espressif32@3.2
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=ESP32 -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE -D I2S_WS=18 -D I2S_SD=22 -D I2S_SCK=23 -D I2S_LR=25 -D I2S_GND=36 -D LEDPIN=2 -D LEDPINB=27  -D WLED_DISABLE_INFRARED
    ;-D USERMOD_FOUR_LINE_DISLAY -D USERMOD_MODE_SORT -D FLD_PIN_SCL=4 -D FLD_PIN_SDA=15 -D FLD_PIN_RST=16
lib_deps = ${esp32.lib_deps}
board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv

[env:soundReactive_ttgo_t7_2]
upload_protocol = espota
# exchange for your WLED IP
upload_port = wled-ttgo17-1.local
platform_packages = ${esp32.platform_packages}
board = ttgo-t7-v13-mini32
platform = espressif32@3.2
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=ESP32 -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE -D I2S_WS=18 -D I2S_SD=22 -D I2S_SCK=23 -D I2S_LR=25 -D I2S_GND=36 -D LEDPIN=2 -D LEDPINB=27  -D WLED_DISABLE_INFRARED
    ;-D USERMOD_FOUR_LINE_DISLAY -D USERMOD_MODE_SORT -D FLD_PIN_SCL=4 -D FLD_PIN_SDA=15 -D FLD_PIN_RST=16
lib_deps = ${esp32.lib_deps}
;board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv
board_build.partitions = ${esp32.default_partitions}

[env:soundReactive_ttgo]
board = ttgo-lora32-v1
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_protocol = espota
upload_speed = 1500000
upload_port = wled-ttgo
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D I2S_WS=18 -D I2S_SD=22 -D I2S_SCK=23 -D I2S_LR=25 -D I2S_GND=36 -D LEDPIN=2 -D LEDPINB=27  -D WLED_DISABLE_INFRARED
lib_ignore =
  m5stickc
lib_deps = ${esp32.lib_deps}
;monitor_filters = hexlify, esp32_exception_decoder, time
; board_build.partitions = ${esp32.default_partitions}
; board_build.f_flash = 80000000L
; board_build.flash_mode = dio

[env:soundReactive_esp32_LEDPIN_16]
board = esp32dev
platform = espressif32@2.0
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D LEDPIN=27 -D USERMOD_TTGO_T_DISPLAY=1 -D WLED_DISABLE_MQTT

lib_ignore =
  ESPAsyncTCP
  ESPAsyncUDP
; [env:soundReactive_lolin_d32]
; board = lolin_d32
; platform = espressif32@2.0
; upload_speed = 921600
; build_unflags = ${common.build_unflags}
; build_flags = ${common.build_flags_esp32} -D WLED_DISABLE_MQTT
; lib_ignore =
;   ESPAsyncTCP
;   ESPAsyncUDP
; lib_deps = ${esp8266.lib_deps}

# ------------------------------------------------------------------------------
# sound reactive board configurations
# ------------------------------------------------------------------------------

[env:soundReactive_esp32dev]
board = esp32dev
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_speed = 460800 ; 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=soundReactive_esp32dev -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
board_build.flash_mode = dio

[env:soundReactive_ttgo_t7_3]
upload_protocol = espota
# exchange for your WLED IP
upload_port = wled-ttgo.local 
board = ttgo-t7-v13-mini32
platform = espressif32@3.2
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=ESP32 -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE -D I2S_WS=18 -D I2S_SD=22 -D I2S_SCK=23 -D I2S_LR=25 -D I2S_GND=36 -D LEDPIN=2 -D LEDPINB=27  -D WLED_DISABLE_INFRARED
    ;-D USERMOD_FOUR_LINE_DISLAY -D USERMOD_MODE_SORT -D FLD_PIN_SCL=4 -D FLD_PIN_SDA=15 -D FLD_PIN_RST=16
lib_deps = ${esp32.lib_deps}
board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv

[env:soundReactive_ttgo_t7_2_4]
upload_protocol = espota
# exchange for your WLED IP
upload_port = wled-ttgo.local
board = ttgo-t7-v13-mini32
platform = espressif32@3.2
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=ESP32 -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE -D I2S_WS=18 -D I2S_SD=22 -D I2S_SCK=23 -D I2S_LR=25 -D I2S_GND=36 -D LEDPIN=2 -D LEDPINB=27  -D WLED_DISABLE_INFRARED
    ;-D USERMOD_FOUR_LINE_DISLAY -D USERMOD_MODE_SORT -D FLD_PIN_SCL=4 -D FLD_PIN_SDA=15 -D FLD_PIN_RST=16
lib_deps = ${esp32.lib_deps}
board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv


[env:soundReactive_ttgo_lora]
board = esp32dev
platform = espressif32@3.2
upload_speed = 921600
;upload_port = /dev/cu.SLAB_USBtoUART
;monitor_port = /dev/cu.SLAB_USBtoUART
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_DISABLE_MQTT -D I2S_WS=18 -D I2S_SD=22 -D I2S_SCK=23 -D I2S_LR=25 -D I2S_GND=36 -D LEDPIN=2 -D LEDPINB=27  -D WLED_DISABLE_INFRARED
    ;-D USERMOD_FOUR_LINE_DISLAY -D USERMOD_MODE_SORT -D FLD_PIN_SCL=4 -D FLD_PIN_SDA=15 -D FLD_PIN_RST=16
lib_ignore =
  ESPAsyncTCP
  ESPAsyncUDP

[env:soundReactive_esp32_eth]
board = esp32-poe
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_RELEASE_NAME=soundReactive_esp32_eth -D RLYPIN=-1 -D WLED_USE_ETHERNET -D BTNPIN=-1 -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE
lib_deps = ${esp32.lib_deps}
board_build.partitions = ${esp32.default_partitions}
; board_build.f_flash = 80000000L
; board_build.flash_mode = dio

[env:soundReactive_lolin_d32]
board = lolin_d32
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
board_build.flash_mode = dio

[env:soundReactive_lolin_d32_pro]
board = lolin_d32_pro
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.f_cpu = 240000000L
board_upload.flash_size = 16MB
board_upload.maximum_size = 16777216
board_build.partitions = tools/SoundReactive_ESP32_16MB.csv
board_build.f_flash = 80000000L
board_build.flash_mode = qio

[env:soundReactive_m5atom]
board = esp32dev
platform = espressif32@3.2
upload_speed = 115200
upload_protocol = espota
# exchange for your WLED IP
upload_port = wled-atom.local
monitor_speed = 115200
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32}
  -D WLED_RELEASE_NAME=soundReactive_m5atom
  -D WLED_DISABLE_MQTT
  -D WLED_DISABLE_LOXONE
  -D LEDPIN=27
  -D BTNPIN=39
  -D DMENABLED=5
  -D I2S_SDPIN=26
  -D I2S_WSPIN=32
  -D I2S_CKPIN=-1
lib_deps = ${esp32.lib_deps}
monitor_filters = esp32_exception_decoder
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
board_build.flash_mode = dio

[env:soundReactive_m5stamp-pico]
board = esp32dev
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
upload_speed = 1500000
monitor_speed = 115200
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32}
  -D WLED_RELEASE_NAME=soundReactive_m5stamp-pico
  -D WLED_DISABLE_MQTT
  -D WLED_DISABLE_LOXONE
  -D WLED_DISABLE_BROWNOUT_DET
  -D LEDPIN=26
  -D BTNPIN=39
 ; -D DMENABLED=5
  -D I2S_SDPIN=32
  -D I2S_WSPIN=33
  -D I2S_CKPIN=-1
lib_deps = ${esp32.lib_deps}
;monitor_filters = hexlify, esp32_exception_decoder, time
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L
board_build.flash_mode = dio

# ------------------------------------------------------------------------------
# custom board configurations
# ------------------------------------------------------------------------------

[env:wemos_shield_esp32]
board = esp32dev
platform =  ${esp32.platform}
upload_speed = 921600
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32}
  -D LEDPIN=16
  -D RLYPIN=19
  -D BTNPIN=17
  -D IRPIN=18
  -D UWLED_USE_MY_CONFIG
  -D USERMOD_DALLASTEMPERATURE
  -D USERMOD_FOUR_LINE_DISPLAY
  -D TEMPERATURE_PIN=23
lib_deps = ${esp32.lib_deps}
  OneWire@~2.3.5
  olikraus/U8g2 @ ^2.28.8
board_build.partitions = ${esp32.default_partitions}
; board_build.partitions = tools/SoundReactive_ESP32_16MB.csv ; ESP32 16MB

# ------------------------------------------------------------------------------
# Soundreactive configs (MoonModules style, should eventually replace above)
# ------------------------------------------------------------------------------

; shared build flags and lib deps for minimum and maximum config
[common_sr]
build_flags_min = 
  -Wall -Wformat -Woverflow -Wuninitialized -Winit-self -Warray-bounds ; enables more warnings
  -Wno-attributes -Wno-unused-variable -Wno-unused-function -Wno-deprecated-declarations ;disables some stupid warnings
  -D WLED_DISABLE_MQTT -D WLED_DISABLE_LOXONE
  ;-D WLED_DISABLE_BLYNK ; BLYNK is only provided for backwards compatibility (no new users accepted). Additionally, it calls analogRead() which could confuse analog mics
  ;-D WLED_DISABLE_BROWNOUT_DET ; enable if you get "brownout detected" errors at startup 
  -D ABL_MILLIAMPS_DEFAULT=1500 ; 850 not enough for 1024 leds
  ; -D WLED_DEBUG ; lots of generic debug messages
  ; -D SR_DEBUG -D NO_MIC_LOGGER ; some extra debug messages from audioreactive
  ; -D MIC_LOGGER ; mic signal plotting with arduino serial plotter
  ; -D WLED_USE_MY_CONFIG

lib_deps_min =
  ; https://github.com/kosme/arduinoFFT#develop @ 1.9.2 ; used for USERMOD_AUDIOREACTIVE
; monitor_filters = esp32_exception_decoder ; used to show crash details

build_flags_max = 
  ; -D WLED_MAX_USERMODS=9 ; default only 4-6
  -D USERMOD_DALLASTEMPERATURE
  -D USE_ALT_DISPlAY ; new versions of USERMOD_FOUR_LINE_DISPLAY and USERMOD_ROTARY_ENCODER_UI
  -D USERMOD_FOUR_LINE_DISPLAY
  -D USERMOD_ROTARY_ENCODER_UI
  -D USERMOD_AUTO_SAVE

lib_deps_max =
  OneWire@~2.3.5 ; used for USERMOD_FOUR_LINE_DISPLAY and USERMOD_DALLASTEMPERATURE
  olikraus/U8g2 @ ^2.28.8 ; used for USERMOD_FOUR_LINE_DISPLAY 

; end of common

; base entries (without WLED_RELEASE_NAME)

; esp32_4MB_min_base: basis for min entries and for max_base
[esp32_4MB_min_base]
board = esp32dev
platform = ${esp32.platform}
upload_speed = 460800 ; or 921600
platform_packages = ${esp32.platform_packages}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} ${common_sr.build_flags_min}
lib_deps = ${esp32.lib_deps} ${common_sr.lib_deps_min}
board_build.partitions = ${esp32.default_partitions}
board_build.f_flash = 80000000L ; use full 80MHz speed for flash (default = 40Mhz) 
board_build.flash_mode = dio ; (dio = dual i/o; more compatible than qio = quad i/o)

;esp32_4MB_max_base: basis for max entries, uses esp32_4MB_min_base, build_flags_max and lib_deps_max
[esp32_4MB_max_base]
extends = esp32_4MB_min_base
build_flags = ${esp32_4MB_min_base.build_flags} ${common_sr.build_flags_max}
lib_deps = ${esp32_4MB_min_base.lib_deps} ${common_sr.lib_deps_max}
board_build.partitions = ${esp32_4MB_min_base.board_build.partitions} 
; board_build.partitions = tools/WLED_ESP32-wrover_4MB.csv

; end of base entries

; bin entries (with WLED_RELEASE_NAME)

; esp32_4MB_min: bin entry, uses esp32_4MB_min_base
[env:esp32_4MB_min]
extends = esp32_4MB_min_base
build_flags = ${esp32_4MB_min_base.build_flags}
  -D WLED_RELEASE_NAME=esp32_4MB_min ; This will be included in the firmware.bin filename
; RAM:   [==        ]  24.1% (used 78900 bytes from 327680 bytes)
; Flash: [========  ]  83.7% (used 1315729 bytes from 1572864 bytes)

; esp32_4MB_max: bin entry, uses esp32_4MB_max_base
[env:esp32_4MB_max]
extends = esp32_4MB_max_base
build_flags = ${esp32_4MB_max_base.build_flags}
  -D WLED_RELEASE_NAME=esp32_4MB_max ; This will be included in the firmware.bin filename
; RAM:   [==        ]  24.4% (used 79812 bytes from 327680 bytes)
; Flash: [========= ]  88.6% (used 1393397 bytes from 1572864 bytes)

; esp32_16MB_max: bin entry, uses esp32_4MB_max_base and adds 16MB settings
[env:esp32_16MB_max]
extends = esp32_4MB_max_base
board = esp32_twilord ; "TwilightLord" ESP32 with 16MB Flash
board_build.partitions = tools/WLED_ESP32_16MB.csv ; for esp32_twilord with 16MB flash
build_flags = ${esp32_4MB_max_base.build_flags}
  -D WLED_RELEASE_NAME=esp32_16MB_max ; This will be included in the firmware.bin filename
; RAM:   [===       ]  32.4% (used 106332 bytes from 327680 bytes)
; Flash: [======    ]  62.5% (used 1311017 bytes from 2097152 bytes)


; esp8266_4MB_min: bin entry for 8266, with 2D (WIP)
; [env:esp8266_4MB_min]
; extends = env:d1_mini
; upload_speed = 460800 ;115200
; build_flags = ${common.build_flags_esp8266}
;   -D WLED_RELEASE_NAME=esp8266_4MB_min ; This will be included in the firmware.bin filename
;   ; -D WLED_DEBUG
;   -D WLED_DISABLE_ALEXA
;   -D WLED_DISABLE_BLYNK
;   -D WLED_DISABLE_HUESYNC
;   -D WLED_DISABLE_SOUND
;   ; -D WLED_DISABLE_2D
;   -UWLED_USE_MY_CONFIG
; ; monitor_filters = esp8266_exception_decoder
; ; RAM:   [======    ]  58.7% (used 48056 bytes from 81920 bytes)
; ; Flash: [========  ]  75.7% (used 790428 bytes from 1044464 bytes)

;; experiemtal environment for boards with PSRAM. 
; ; esp32_4MB_PSRAM_max: bin entry, uses esp32_4MB_max_base and adds specific settings
; [env:esp32_4MB_PSRAM_max]
; extends = esp32_4MB_max_base
; board = lolin_d32_pro
; ;board = esp32cam
; build_flags = ${esp32_4MB_max_base.build_flags} 
;   -D WLED_RELEASE_NAME=esp32_4MB_PSRAM_max
;   -D WLED_DISABLE_BROWNOUT_DET
;   -D WLED_USE_PSRAM 
;    ; -D WLED_DEBUG
;    ; -D SR_DEBUG -D NO_MIC_LOGGER
;    ; -D MIC_LOGGER
# ------------------------------------------------------------------------------
# custom board configurations
# ------------------------------------------------------------------------------

;wemos_shield_esp32_4MB_max_base: base entry, uses esp32_4MB_max_base
[wemos_shield_esp32_4MB_max_base]
extends = esp32_4MB_max_base
build_flags = ${esp32_4MB_max_base.build_flags}
  -D LEDPIN=16
  -D RLYPIN=19
  -D BTNPIN=17
  -D IRPIN=18
  -D AUDIOPIN=-1 -D DMENABLED=1 -D I2S_SDPIN=32 -D I2S_WSPIN=15 -D I2S_CKPIN=14 -D MCLK_PIN=0
  -D TEMPERATURE_PIN=23
  -D FLD_PIN_SCL=22 -D FLD_PIN_SDA=21
  ; -D ENCODER_DT_PIN=18 -D ENCODER_CLK_PIN=5 -D ENCODER_SW_PIN=19  

;wemos_shield_esp32_4MB_max: bin entry, uses wemos_shield_esp32_4MB_max_base
[env:wemos_shield_esp32_4MB_max]
extends = wemos_shield_esp32_4MB_max_base
build_flags = ${wemos_shield_esp32_4MB_max_base.build_flags}
  -D WLED_RELEASE_NAME=wemos_shield_esp32_4MB_max ; This will be included in the firmware.bin filename
; RAM:   [===       ]  32.5% (used 106340 bytes from 327680 bytes)
; Flash: [========  ]  83.4% (used 1311049 bytes from 1572864 bytes)

;wemos_shield_esp32_16MB_max: bin entry, uses wemos_shield_esp32_4MB_max_base and adds 16MB settings
[env:wemos_shield_esp32_16MB_max]
extends = wemos_shield_esp32_4MB_max_base
board = esp32_twilord ; "TwilightLord" ESP32 with 16MB Flash
board_build.partitions = tools/WLED_ESP32_16MB.csv ; for esp32_twilord with 16MB flash
build_flags = ${wemos_shield_esp32_4MB_max_base.build_flags}
  -D WLED_RELEASE_NAME=wemos_shield_esp32_16MB_max ; This will be included in the firmware.bin filename
; RAM:   [===       ]  32.5% (used 106340 bytes from 327680 bytes)
; Flash: [======    ]  62.5% (used 1311049 bytes from 2097152 bytes)

; ESP32 WLED pico board with builtin ICS-43432 microphpone
[env:esp32_pico_4MB_min]
extends = esp32_4MB_min_base
board = pico32
build_flags = ${esp32_4MB_min_base.build_flags}
  -D WLED_RELEASE_NAME=esp32_pico_4MB_min ; This will be included in the firmware.bin filename
  -D WLED_DISABLE_BROWNOUT_DET
  -D SERVERNAME='"WLED-pico32"'
  -D USERMOD_AUTO_SAVE
  -D LEDPIN=2
  -D RLYPIN=-1
  -D BTNPIN=-1
  -D IRPIN=-1
  -D FLD_PIN_SCL=22 -D FLD_PIN_SDA=21
  -D AUDIOPIN=-1 -D DMENABLED=1 -D I2S_SDPIN=25 -D I2S_WSPIN=15 -D I2S_CKPIN=14
  ; -D MCLK_PIN=0
  ; -D WLED_DEBUG ; lots of generic debug messages
  ; -D SR_DEBUG -D NO_MIC_LOGGER ; some extra debug messages from audioreactive
  ; -D MIC_LOGGER ; mic signal plotting with arduino serial plotter
  ; -D WLED_USE_MY_CONFIG
; RAM:   [===       ]  32.4% (used 106284 bytes from 327680 bytes)
; Flash: [========  ]  80.6% (used 1267505 bytes from 1572864 bytes); 

[env:m5atom]
board = esp32dev
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} -D LEDPIN=27 -D BTNPIN=39
lib_deps = ${esp32.lib_deps}
platform = espressif32@3.2
board_build.partitions = ${esp32.default_partitions}

[env:sp501e]
board = esp_wroom_02
platform = ${common.platform_wled_default}
board_build.ldscript = ${common.ldscript_2m512k}
build_flags = ${common.build_flags_esp8266} -D LEDPIN=3 -D BTNPIN=1
lib_deps = ${esp8266.lib_deps}

[env:sp511e]
board = esp_wroom_02
platform = ${common.platform_wled_default}
board_build.ldscript = ${common.ldscript_2m512k}
build_flags = ${common.build_flags_esp8266} -D LEDPIN=3 -D BTNPIN=2 -D IRPIN=5 -D WLED_MAX_BUTTONS=3
lib_deps = ${esp8266.lib_deps}

[env:athom7w]
board = esp_wroom_02
platform = ${common.platform_wled_default}
board_build.ldscript = ${common.ldscript_2m512k}
build_flags = ${common.build_flags_esp8266} -D WLED_MAX_CCT_BLEND=0 -D BTNPIN=-1 -D IRPIN=-1 -D WLED_DISABLE_INFRARED
lib_deps = ${esp8266.lib_deps}

[env:athom15w]
board = esp_wroom_02
platform = ${common.platform_wled_default}
board_build.ldscript = ${common.ldscript_2m512k}
build_flags = ${common.build_flags_esp8266} -D WLED_USE_IC_CCT -D BTNPIN=-1 -D IRPIN=-1 -D WLED_DISABLE_INFRARED
lib_deps = ${esp8266.lib_deps}

[env:MY9291]
board = esp01_1m
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_1m128k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} -D WLED_RELEASE_NAME=MY9291 -D WLED_DISABLE_OTA -D USERMOD_MY9291
lib_deps = ${esp8266.lib_deps}

# ------------------------------------------------------------------------------
# travis test board configurations
# ------------------------------------------------------------------------------

[env:travis_esp8266]
extends = env:d1_mini
build_type = debug
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266} ${common.debug_flags} ${common.build_flags_all_features}

[env:travis_esp32]
extends = env:esp32dev
; build_type = debug
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} ${common.debug_flags} ${common.build_flags_all_features}

# ------------------------------------------------------------------------------
# codm pixel controller board configurations
# codm-controller-0.6 can also be used for the TYWE3S controller
# ------------------------------------------------------------------------------

[env:codm-controller-0.6]
board = esp_wroom_02
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_2m512k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}

[env:codm-controller-0.6-rev2]
board = esp_wroom_02
platform = ${common.platform_wled_default}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_4m1m}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp8266}
lib_deps = ${esp8266.lib_deps}

# ------------------------------------------------------------------------------
# EleksTube-IPS
# ------------------------------------------------------------------------------
[env:elekstube_ips]
board = esp32dev
platform = espressif32@3.2
upload_speed = 921600
build_flags = ${common.build_flags_esp32} -D WLED_DISABLE_BROWNOUT_DET -D WLED_DISABLE_INFRARED
  -D USERMOD_RTC
  -D USERMOD_ELEKSTUBE_IPS
  -D LEDPIN=12
  -D RLYPIN=27
  -D BTNPIN=34
  -D WLED_DISABLE_BLYNK
  -D DEFAULT_LED_COUNT=6
  # Display config
  -D ST7789_DRIVER
  -D TFT_WIDTH=135
  -D TFT_HEIGHT=240
  -D CGRAM_OFFSET
  -D TFT_SDA_READ
  -D TFT_MOSI=23
  -D TFT_SCLK=18
  -D TFT_DC=25
  -D TFT_RST=26
  -D SPI_FREQUENCY=40000000
  -D USER_SETUP_LOADED
monitor_filters = esp32_exception_decoder
lib_deps =
  ${esp32.lib_deps}
  TFT_eSPI @ ^2.3.70
board_build.partitions = ${esp32.default_partitions}
