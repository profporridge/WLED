/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
*/

#include <Arduino.h>
#include <tcMenu.h>
#include "TTGO-eink_menu.h"

// Global variable declarations

const PROGMEM ConnectorLocalInfo applicationInfo = { "WLED", "d4753f24-2948-4cad-a872-f3d756858246" };
AdaColorGfxMenuConfig gfxConfig;
AdaFruitGfxMenuRenderer renderer;

// Global Menu Item declarations

ListRuntimeMenuItem menuEffects(2, 100, fnEffectsRtCall, NULL);
const char enumStrAudioSync_0[] PROGMEM  = "Transmit";
const char enumStrAudioSync_1[] PROGMEM  = "Receive";
const char enumStrAudioSync_2[] PROGMEM  = "Disabled";
const char* const enumStrAudioSync[] PROGMEM  = { enumStrAudioSync_0, enumStrAudioSync_1, enumStrAudioSync_2 };
const EnumMenuInfo PROGMEM minfoAudioSync = { "AudioSync", 5, 0xFFFF, 2, UpdateAudio, enumStrAudioSync };
EnumMenuItem menuAudioSync(&minfoAudioSync, 0, &menuEffects);
RENDERING_CALLBACK_NAME_INVOKE(fnColorRtCall, rgbAlphaItemRenderFn, "Color", -1, UpdateColor)
Rgb32MenuItem menuColor(4, fnColorRtCall, false, &menuAudioSync);
const AnalogMenuInfo PROGMEM minfoBrightness = { "Brightness", 3, 0xFFFF, 255, NO_CALLBACK, 0, 5, "" };
AnalogMenuItem menuBrightness(&minfoBrightness, 0, &menuColor);


// Set up code

void setupMenu() {


    prepareAdaColorDefaultGfxConfig(&gfxConfig);
    renderer.setGraphicsDevice(&display, &gfxConfig);
    switches.initialise(internalDigitalIo(), true);
    menuMgr.initForUpDownOk(&renderer, &menuBrightness, BUTTON_1, BUTTON_2, BUTTON_3);
}
